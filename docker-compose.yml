version: "3.9"
services:
  postgres:
    image: postgres:16-alpine
    container_name: credence-postgres
    environment:
      POSTGRES_USER: credence
      POSTGRES_PASSWORD: credence
      POSTGRES_DB: credence
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U credence"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  pgdata: {}

  redis:
    image: redis:7-alpine
    container_name: credence-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: credence-api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      CREDENCE_CONFIG: /app/config/config.yaml
      CREDENCE_DATABASE_URL: postgresql+psycopg://credence:credence@postgres:5432/credence
      CREDENCE_REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    command: ["python", "/app/entrypoint.py", "api"]

  worker:
    build: .
    container_name: credence-worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      CREDENCE_CONFIG: /app/config/config.yaml
      CREDENCE_DATABASE_URL: postgresql+psycopg://credence:credence@postgres:5432/credence
      CREDENCE_REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    command: ["python", "/app/entrypoint.py", "worker"]


